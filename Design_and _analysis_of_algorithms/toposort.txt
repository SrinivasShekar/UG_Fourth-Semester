#include <stdio.h>
#include <stdlib.h>
# include <time.h>
int i,j,k,n,a[10][10],degin[10],visited[10],count=0;
float time_elapsed(struct timespec *start, struct timespec *end);
void topo(int [10][10],int);
int main()
{
	struct timespec start,end;
	//printf("Enter the no of vertices:");
	scanf("%d",&n);
	//printf("Enter the adjacency matrix:");
	for(i=0;i<n;i++)
		for(j=0;j<n;j++)
			scanf("%d",&a[i][j]);
		for(i=0;i<n;i++)
		{
			degin[i]=0;
			visited[i]=0;
		}
	clock_gettime(CLOCK_REALTIME,&start);
	    topo(a,n);
    clock_gettime(CLOCK_REALTIME,&end);	
    printf("Time taken is %f milliseconds\n",time_elapsed(&start,&end));

}

float time_elapsed(struct timespec *start, struct timespec *end)
{
	float t=0.0;
	t=(end->tv_sec-start->tv_sec)*1000;
	t=t+((end->tv_nsec-start->tv_nsec)*0.000001);
	return t;
}


void topo(int a[10][10],int n)
{       int i;
        for(i=0;i<n;i++)
			for(j=0;j<n;j++)
                degin[i]=degin[i]+a[j][i];
			printf("The topological order is:\n");
			while(count<n)
			{
				for(k=0;k<n;k++)
				{
					if((degin[k]==0) && (visited[k]==0))
					{
						printf("%d\n",(k+1));
					     visited[k]=1;
					}

					for(i=0;i<n;i++)
					{
						if(a[i][k]==1)
							degin[k]--;
					}

				}
				count++;
			}
}