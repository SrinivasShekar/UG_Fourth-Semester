#include<stdio.h>
#include<stdlib.h>

void BFS(int);
void insert(int);
int Empty();
int dequeue();
int getindex(int);
int q[20];
int f=0;
int r=0;
int Graph[20][20],visited[20],n;    
int count=1,countnodes=0;
int main()
{
    int i,j;
       
    scanf("%d",&n);
 
        
    for(i=0;i<n;i++)
       for(j=0;j<n;j++)
            scanf("%d",&Graph[i][j]);
 
    
   for(i=0;i<n;i++)
   {     visited[i]=0;
        
   }
        BFS(0);
   for(i=0;i<n;i++)
   { if(visited[i]==0)
       {  count++; 
           BFS(i);
       }
   }
   printf("\ncountcomp=%d",count);
   //printf("\ncountnodes=%d",countnodes);

}
 

void BFS(int i)
{   
    int j=0,v;
    visited[i]=1;
    insert(i);
    while(Empty()!=1)
   {   v=dequeue();
       i=getindex(v);
       
       for(j=0;j<n;j++)
       {  if(!visited[j]&&Graph[i][j]==1)
           {   visited[j]=1;
               insert(j);
           }//countnodes++;
       }
        printf("%d\n",v);
        
    }
} 

void insert(int ele)
{     
    
       q[r]=ele;
       r++;
    
}
int dequeue()
{
    int ele;
    if(Empty())
    {   return 0;
    }
    else
    {
        ele=q[f];
        f++;
        return ele;
    }
}
int Empty()
{
    if(f==0 && r==0)
    {   return 1;}
    else if(f==r)
        return 1;
    else
        return 0;
        
}
int getindex(int ele)
{    int index[n],i;
     for(i=0;i<n;i++)
     {  index[i]=i;   
     }
     return index[ele];
}